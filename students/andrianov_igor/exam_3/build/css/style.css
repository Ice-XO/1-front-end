@import "./bootstrap-grid.min.css";
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
font,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

ins {
  text-decoration: none;
}

del {
  text-decoration: line-through;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

button {
  padding: 0;
}

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

@font-face {
  font-family: "Oswald-Regular";
  font-style: normal;
  font-weight: 400;
  src: local(""), url("../fonts/Oswald-Regular.woff2") format("woff2"), url("../fonts/Oswald-Regular.woff") format("woff");
}
@font-face {
  font-family: "Oswald-Light";
  font-style: normal;
  font-weight: 300;
  src: local(""), url("../fonts/Oswald-Light.woff2") format("woff2"), url("../fonts/Oswald-Light.woff") format("woff");
}
.page {
  font-family: "Oswald-Regular", Arial, Helvetica, sans-serif;
  font-size: 14px;
  min-height: 100vh;
  color: #2C4058;
}

img {
  max-width: 100%;
}

.black {
  background-color: black;
}

.row_relative {
  position: relative;
}

.header {
  position: absolute;
  width: 100%;
  background-color: grey;
}
.header__row {
  height: 79px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.header__logo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.header__logo_position {
  padding-left: 20px;
}
.header__right-side {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.header__button-wrapper {
  display: inline-block;
  border-right: 1px solid white;
  border-left: 1px solid white;
  margin-left: -6px;
  margin-right: 20px;
}
.header__login-button {
  padding: 25px 34px;
}
.header__search {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.header__search-form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding-top: 20px;
}
.header__search-input-wrapper {
  display: inline-block;
}
.header__search-input {
  display: inline-block;
  outline: none;
  width: 0%;
  opacity: 0;
  height: 32px;
  background: #f7f8f3;
  border: 2px solid #ced6af;
  margin-right: 15px;
  -webkit-transition: width 0.4s ease-in-out;
  transition: width 0.4s ease-in-out;
}
.header__search-svg-wrapper {
  padding-top: 10px;
  margin-left: 80px;
  margin-right: 10px;
}
.header__search-button-wrapper {
  display: inline-block;
  padding-top: 3px;
}
.header__search-button {
  padding: 5px 5px;
  margin-right: 34px;
}
.header__cart {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border-left: 1px solid white;
  padding: 20px 0 0 35px;
}
.header__search-form .header__search-input:focus {
  width: 135%;
  opacity: 1;
}

.searchActive {
  width: 135%;
  opacity: 1;
}

.searchActive2 {
  width: 0%;
  opacity: 0;
  -webkit-transition: all 0.4s ease-out;
  transition: all 0.4s ease-out;
}

.menu__items {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.menu__item-link {
  position: relative;
}
.menu__item-link:after {
  position: absolute;
  content: "";
  display: block;
  width: 0%;
  height: 2px;
  top: 120%;
  left: -20%;
  background-color: #9db892;
  -webkit-transition: width 0.3s ease-out;
  transition: width 0.3s ease-out;
}
.menu__item-link:hover:after {
  width: 141%;
}
.menu__item-link_position {
  margin-left: 47px;
}

.link {
  font-family: "Oswald-Regular", Arial, Helvetica, sans-serif;
  font-size: 16px;
  color: white;
  text-transform: uppercase;
  line-height: 2.5;
  text-decoration: none;
  letter-spacing: 0.06em;
  cursor: pointer;
}
@media (max-width: 1200px) {
  .link {
    font-size: calc(14px + 2 * ((100vw - 320px) / 880));
  }
}

.title {
  font-family: "Oswald-Regular", Arial, Helvetica, sans-serif;
  font-size: 30px;
  line-height: 1.833;
  color: white;
  font-family: Oswald-Regular;
}
@media (max-width: 1200px) {
  .title {
    font-size: calc(18px + 12 * ((100vw - 320px) / 880));
  }
}

/* Full-width input fields */
input[type=text],
input[type=password] {
  width: 100%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

/* Set a style for all buttons */
button {
  font-family: "Oswald-Regular", Arial, Helvetica, sans-serif;
  font-size: 16px;
  border: none;
  text-transform: uppercase;
  color: #fff;
  background-color: transparent;
  cursor: pointer;
}

button:hover {
  opacity: 0.8;
}

/* Extra styles for the cancel button */
.cancelbtn {
  width: auto;
  padding: 10px 18px;
  background-color: #f44336;
}

/* Center the image and position the close button */
.imgcontainer {
  text-align: center;
  margin: 24px 0 12px 0;
  position: relative;
}

img.avatar {
  width: 40%;
  border-radius: 50%;
}

.container {
  padding: 16px;
}

span.psw {
  float: right;
  padding-top: 16px;
}

/* The Modal (background) */
.modal {
  display: none;
  /* Hidden by default */
  position: fixed;
  /* Stay in place */
  z-index: 1;
  /* Sit on top */
  left: 0;
  top: 0;
  width: 100%;
  /* Full width */
  height: 100%;
  /* Full height */
  overflow: auto;
  /* Enable scroll if needed */
  background-color: black;
  /* Fallback color */
  background-color: rgba(0, 0, 0, 0.4);
  /* Black w/ opacity */
  padding-top: 60px;
}

/* Modal Content/Box */
.modal-content {
  background-color: #fefefe;
  margin: 5% auto 15% auto;
  /* 5% from the top, 15% from the bottom and centered */
  border: 1px solid #888;
  width: 80%;
  /* Could be more or less, depending on screen size */
}

/* The Close Button (x) */
.close {
  position: absolute;
  right: 25px;
  top: 0;
  color: #000;
  font-size: 35px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: red;
  cursor: pointer;
}

/* Add Zoom Animation */
.animate {
  -webkit-animation: animatezoom 0.6s;
  animation: animatezoom 0.6s;
}

@-webkit-keyframes animatezoom {
  from {
    -webkit-transform: scale(0);
  }
  to {
    -webkit-transform: scale(1);
  }
}
@keyframes animatezoom {
  from {
    -webkit-transform: scale(0);
    transform: scale(0);
  }
  to {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}
/* Change styles for span and cancel button on extra small screens */
@media screen and (max-width: 300px) {
  span.psw {
    display: block;
    float: none;
  }

  .cancelbtn {
    width: 100%;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
